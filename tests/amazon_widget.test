<?php

/**
 * @file
 * Tests for Amazon Widget module.
 */
class AmazonWidgetTest extends DrupalWebTestCase {
  protected $admin_user;
  protected $node;

  /**
   * @inheritdoc
   *
   * @return array
   */
  public static function getInfo() {
    return array(
      'name' => 'Amazon Widget',
      'description' => 'Tests that Amazon Widget renders correctly.',
      'group' => 'Amazon',
    );
  }

  /**
   * @inheritdoc
   */
  protected function setUp() {
    // Enable modules.
    $modules = array(
      'amazon',
      'node',
      'amazon_test',
      'amazon_wysiwyg',
      'amazon_widget',
    );
    parent::setUp($modules);

    // Module settings.
    variable_set('amazon_refresh_schedule', REQUEST_TIME + 3600);
    variable_set('amazon_aws_access_key', $this->randomString());
    variable_set('amazon_aws_secret_access_key', $this->randomString());
    variable_set('amazon_default_locale', 'US');
    variable_set('amazon_locale_US_associate_id', 'test-20');
    variable_set('amazon_locale_UK_associate_id', 'test-21');
  }

  /**
   * Helper to create admin user and login.
   */
  private function adminLogin() {
    // Create Admin user.
    $this->admin_user = $this->drupalCreateUser(array(
        'administer content types',
        'administer nodes',
        'create article content',
        'edit any article content',
        'administer fields',
        'administer filters',
        'administer amazon',
      )
    );
    $this->drupalLogin($this->admin_user);
  }

  /**
   * Helper to configure Input filters.
   */
  private function configureInputFilters() {
    $this->adminLogin();

    $this->drupalGet('admin/config/content/formats/full_html');
    $this->assertResponse(200);
    $edit = array(
      "filters[amazon_wysiwyg][status]" => '1',
      // Drupal ships with 3 roles by default, ticking the new user created by the test.
      "roles[4]" => '1',
    );
    $this->drupalPost(NULL, $edit, t('Save configuration'));
  }

  /**
   * Helper to create a node.
   */
  private function createNode() {
    $amazon_items = amazon_data_cache();
    $body_value   = '<!--amazon-widget{"data_id":"1498486197951","asin":"' . $amazon_items[0]['asin'] . '","style":"buy_now_wide","locale":"US"}-->';
    $body_value  .= '<!--amazon-widget{"data_id":"6197951498481","asin":"' . $amazon_items[1]['asin'] . '","style":"buy_now_wide","locale":"UK"}-->';
    $this->node = $this->drupalCreateNode(
      array(
        'type' => 'article',
        'body' => array(
          LANGUAGE_NONE => array(
            array(
              'value' => $body_value,
              'format' => 'full_html',
              'summary' => '',
            ),
          ),
        )
      )
    );
  }

  /**
   * Helper to visit a node;
   */
  private function visitNode() {
    $this->drupalGet('node/' . $this->node->nid);
    $this->assertResponse(200);
  }

  /**
   * Test Admin UI.
   */
  public function testAdminUi() {
    $this->adminLogin();

    // Test wysiwyg plugin on node.
    $this->drupalGet('admin/config/services/amazon/widget');
    $this->assertResponse(200);
    $this->assertPattern("/input.*edit-amazon-widget-geoip-country-code-key.*country_code/", "Configuration for country code key is present");
    $this->assertPattern("/input.*edit-amazon-widget-geoip-url.*http:\/\/freegeoip.net\/json/", "Configuration for geoip server is present");
  }

  /**
   * Test Nodes.
   */
  public function testNodes() {
    $this->configureInputFilters();
    $this->createNode();
    $this->visitNode();

    // Test that the widgets are on the page (not checking if they are hidden with CSS or not).
    $this->assertRaw('The Complete Matrix Trilogy', 'US widget title is on the page.');
    $this->assertRaw('$11.69', 'US widget price is on the page.');
    $this->assertRaw('Complete Matrix Trilogy [Blu-ray] [1999] [Region Free]', 'UK widget title is on the page.');
    $this->assertRaw('Â£8.72', 'UK widget price is on the page.');

    // Test Js for widget.
    $this->assertRaw('amazon_widget/amazon_widget.js', 'Required Js is present.');
  }
}
